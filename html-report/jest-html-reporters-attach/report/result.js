window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":19,"numPassedTests":266,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":266,"startTime":1702808483040,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495677,"runtime":8356,"slow":true,"start":1702808487321},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\exercism\\toRoman.GPT.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["toRoman"],"duration":5,"failureMessages":[],"fullName":"toRoman converts 1 to \"I\"","status":"passed","title":"converts 1 to \"I\""},{"ancestorTitles":["toRoman"],"duration":2,"failureMessages":[],"fullName":"toRoman converts 4 to \"IV\"","status":"passed","title":"converts 4 to \"IV\""},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 9 to \"IX\"","status":"passed","title":"converts 9 to \"IX\""},{"ancestorTitles":["toRoman"],"duration":2,"failureMessages":[],"fullName":"toRoman converts 58 to \"LVIII\"","status":"passed","title":"converts 58 to \"LVIII\""},{"ancestorTitles":["toRoman"],"duration":3,"failureMessages":[],"fullName":"toRoman converts 1994 to \"MCMXCIV\"","status":"passed","title":"converts 1994 to \"MCMXCIV\""},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 3999 to \"MMMCMXCIX\"","status":"passed","title":"converts 3999 to \"MMMCMXCIX\""},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman returns an empty string for 0","status":"passed","title":"returns an empty string for 0"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495694,"runtime":8369,"slow":true,"start":1702808487325},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\async\\MyClassAsyncPromises.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassAsyncPromises"],"duration":9,"failureMessages":[],"fullName":"MyClassAsyncPromises should create an instance of MyClassAsyncPromises","status":"passed","title":"should create an instance of MyClassAsyncPromises"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":2,"failureMessages":[],"fullName":"MyClassAsyncPromises should return the correct value asynchronously","status":"passed","title":"should return the correct value asynchronously"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":3,"failureMessages":[],"fullName":"MyClassAsyncPromises should multiply the value asynchronously","status":"passed","title":"should multiply the value asynchronously"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":59,"failureMessages":[],"fullName":"MyClassAsyncPromises should chain promises correctly","status":"passed","title":"should chain promises correctly"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":42,"failureMessages":[],"fullName":"MyClassAsyncPromises should handle multiple promises","status":"passed","title":"should handle multiple promises"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":39,"failureMessages":[],"fullName":"MyClassAsyncPromises should handle multiple promises using Promise.all","status":"passed","title":"should handle multiple promises using Promise.all"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":53,"failureMessages":[],"fullName":"MyClassAsyncPromises should reject the promise with proper error message","status":"passed","title":"should reject the promise with proper error message"},{"ancestorTitles":["MyClassAsyncPromises"],"duration":5,"failureMessages":[],"fullName":"MyClassAsyncPromises should handle pending promises","status":"passed","title":"should handle pending promises"}]},{"numFailingTests":0,"numPassingTests":26,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495703,"runtime":8375,"slow":true,"start":1702808487328},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\exercism\\toRoman.Exercism.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["toRoman"],"duration":40,"failureMessages":[],"fullName":"toRoman converts 1","status":"passed","title":"converts 1"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 2","status":"passed","title":"converts 2"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 3","status":"passed","title":"converts 3"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 4","status":"passed","title":"converts 4"},{"ancestorTitles":["toRoman"],"duration":2,"failureMessages":[],"fullName":"toRoman converts 5","status":"passed","title":"converts 5"},{"ancestorTitles":["toRoman"],"duration":12,"failureMessages":[],"fullName":"toRoman converts 6","status":"passed","title":"converts 6"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 9","status":"passed","title":"converts 9"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 16","status":"passed","title":"converts 16"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 27","status":"passed","title":"converts 27"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 48","status":"passed","title":"converts 48"},{"ancestorTitles":["toRoman"],"duration":3,"failureMessages":[],"fullName":"toRoman converts 49","status":"passed","title":"converts 49"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 59","status":"passed","title":"converts 59"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 66","status":"passed","title":"converts 66"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 93","status":"passed","title":"converts 93"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 141","status":"passed","title":"converts 141"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 163","status":"passed","title":"converts 163"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 166","status":"passed","title":"converts 166"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 402","status":"passed","title":"converts 402"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 575","status":"passed","title":"converts 575"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 666","status":"passed","title":"converts 666"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 911","status":"passed","title":"converts 911"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 1024","status":"passed","title":"converts 1024"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 1666","status":"passed","title":"converts 1666"},{"ancestorTitles":["toRoman"],"duration":0,"failureMessages":[],"fullName":"toRoman converts 3000","status":"passed","title":"converts 3000"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 3001","status":"passed","title":"converts 3001"},{"ancestorTitles":["toRoman"],"duration":1,"failureMessages":[],"fullName":"toRoman converts 3999","status":"passed","title":"converts 3999"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495724,"runtime":8397,"slow":true,"start":1702808487327},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\mock\\MyClassMockFunctions4thPart.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassGetMockName"],"duration":5,"failureMessages":[],"fullName":"MyClassGetMockName should mock getValue method with default implementation","status":"passed","title":"should mock getValue method with default implementation"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should mock multiplyBy method with default implementation","status":"passed","title":"should mock multiplyBy method with default implementation"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should mock multiplyBy method with custom implementation","status":"passed","title":"should mock multiplyBy method with custom implementation"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495885,"runtime":8564,"slow":true,"start":1702808487321},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\unit\\component\\integration\\user.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User usit tests"],"duration":88,"failureMessages":[],"fullName":"User usit tests should create a new user with the provided values","status":"passed","title":"should create a new user with the provided values"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should default children to an empty array if not provided","status":"passed","title":"should default children to an empty array if not provided"},{"ancestorTitles":["User usit tests"],"duration":3,"failureMessages":[],"fullName":"User usit tests should add a child to the user","status":"passed","title":"should add a child to the user"},{"ancestorTitles":["User usit tests"],"duration":9,"failureMessages":[],"fullName":"User usit tests should edit a child's information","status":"passed","title":"should edit a child's information"},{"ancestorTitles":["User usit tests"],"duration":3,"failureMessages":[],"fullName":"User usit tests should remove a child from the user","status":"passed","title":"should remove a child from the user"},{"ancestorTitles":["User usit tests"],"duration":2,"failureMessages":[],"fullName":"User usit tests should handle a user in \"children\" role with children of their own","status":"passed","title":"should handle a user in \"children\" role with children of their own"},{"ancestorTitles":["User usit tests"],"duration":2,"failureMessages":[],"fullName":"User usit tests should calculate the total money of the user and their children","status":"passed","title":"should calculate the total money of the user and their children"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should check if the user is eligible for a discount","status":"passed","title":"should check if the user is eligible for a discount"},{"ancestorTitles":["User usit tests"],"duration":9,"failureMessages":[],"fullName":"User usit tests should initiate a user with a child who has a child","status":"passed","title":"should initiate a user with a child who has a child"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should increment the age of the user and their children until a certain age","status":"passed","title":"should increment the age of the user and their children until a certain age"},{"ancestorTitles":["User usit tests"],"duration":2,"failureMessages":[],"fullName":"User usit tests should categorize users based on their age","status":"passed","title":"should categorize users based on their age"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should check if the user is a teenager","status":"passed","title":"should check if the user is a teenager"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should check if the user is a senior citizen","status":"passed","title":"should check if the user is a senior citizen"},{"ancestorTitles":["User usit tests"],"duration":0,"failureMessages":[],"fullName":"User usit tests should calculate the retirement age","status":"passed","title":"should calculate the retirement age"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should calculate years until retirement for an adult user","status":"passed","title":"should calculate years until retirement for an adult user"},{"ancestorTitles":["User usit tests"],"duration":0,"failureMessages":[],"fullName":"User usit tests should calculate years until retirement for a user already at retirement age","status":"passed","title":"should calculate years until retirement for a user already at retirement age"},{"ancestorTitles":["User usit tests"],"duration":3,"failureMessages":[],"fullName":"User usit tests should calculate years until retirement for a teenager","status":"passed","title":"should calculate years until retirement for a teenager"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should propose a new status for a user with low money","status":"passed","title":"should propose a new status for a user with low money"},{"ancestorTitles":["User usit tests"],"duration":1,"failureMessages":[],"fullName":"User usit tests should propose a new status for a user with moderate money","status":"passed","title":"should propose a new status for a user with moderate money"},{"ancestorTitles":["User usit tests"],"duration":0,"failureMessages":[],"fullName":"User usit tests should propose a new status for a user with high money","status":"passed","title":"should propose a new status for a user with high money"},{"ancestorTitles":["User usit tests"],"duration":4,"failureMessages":[],"fullName":"User usit tests should propose a new status for a user with very high money","status":"passed","title":"should propose a new status for a user with very high money"}]},{"numFailingTests":0,"numPassingTests":50,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808495920,"runtime":8593,"slow":true,"start":1702808487327},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\exercism\\Clock.Exrcism.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":7,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time on the hour","status":"passed","title":"on the hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":7,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time past the hour","status":"passed","title":"past the hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":2,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time midnight is zero hours","status":"passed","title":"midnight is zero hours"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time hour rolls over","status":"passed","title":"hour rolls over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time hour rolls over continuously","status":"passed","title":"hour rolls over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time sixty minutes is next hour","status":"passed","title":"sixty minutes is next hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time minutes roll over","status":"passed","title":"minutes roll over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time minutes roll over continuously","status":"passed","title":"minutes roll over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time hour and minutes roll over","status":"passed","title":"hour and minutes roll over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time hour and minutes roll over continuously","status":"passed","title":"hour and minutes roll over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":2,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time hour and minutes roll over to exactly midnight","status":"passed","title":"hour and minutes roll over to exactly midnight"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative hour","status":"passed","title":"negative hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative hour rolls over","status":"passed","title":"negative hour rolls over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative hour rolls over continuously","status":"passed","title":"negative hour rolls over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative minutes","status":"passed","title":"negative minutes"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative minutes rolls over","status":"passed","title":"negative minutes rolls over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative minutes rolls over continuously","status":"passed","title":"negative minutes rolls over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative hour and minutes both roll over","status":"passed","title":"negative hour and minutes both roll over"},{"ancestorTitles":["Clock","Creating a new clock with an initial time"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time negative hour and minutes both roll over continuously","status":"passed","title":"negative hour and minutes both roll over continuously"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add minutes","status":"passed","title":"add minutes"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add no minutes","status":"passed","title":"add no minutes"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":2,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add to next hour","status":"passed","title":"add to next hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add more than one hour","status":"passed","title":"add more than one hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add more than two hours with carry","status":"passed","title":"add more than two hours with carry"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":6,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add across midnight","status":"passed","title":"add across midnight"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add more than one day (1500 min = 25 hrs)","status":"passed","title":"add more than one day (1500 min = 25 hrs)"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes add more than two days","status":"passed","title":"add more than two days"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract minutes","status":"passed","title":"subtract minutes"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract to previous hour","status":"passed","title":"subtract to previous hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract more than an hour","status":"passed","title":"subtract more than an hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract across midnight","status":"passed","title":"subtract across midnight"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":2,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract more than two hours","status":"passed","title":"subtract more than two hours"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract more than two hours with borrow","status":"passed","title":"subtract more than two hours with borrow"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract more than one day (1500 min = 25 hrs)","status":"passed","title":"subtract more than one day (1500 min = 25 hrs)"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Adding and subtracting minutes"],"duration":2,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Adding and subtracting minutes subtract more than two days","status":"passed","title":"subtract more than two days"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with same time","status":"passed","title":"clocks with same time"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":5,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks a minute apart","status":"passed","title":"clocks a minute apart"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks an hour apart","status":"passed","title":"clocks an hour apart"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with hour overflow","status":"passed","title":"clocks with hour overflow"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with hour overflow by several days","status":"passed","title":"clocks with hour overflow by several days"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative hour","status":"passed","title":"clocks with negative hour"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative hour that wraps","status":"passed","title":"clocks with negative hour that wraps"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative hour that wraps multiple times","status":"passed","title":"clocks with negative hour that wraps multiple times"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with minute overflow","status":"passed","title":"clocks with minute overflow"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with minute overflow by several days","status":"passed","title":"clocks with minute overflow by several days"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative minute","status":"passed","title":"clocks with negative minute"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative minute that wraps","status":"passed","title":"clocks with negative minute that wraps"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative minute that wraps multiple times","status":"passed","title":"clocks with negative minute that wraps multiple times"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":0,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative hours and minutes","status":"passed","title":"clocks with negative hours and minutes"},{"ancestorTitles":["Clock","Creating a new clock with an initial time","Construct two separate clocks, set times, test if they are equal"],"duration":1,"failureMessages":[],"fullName":"Clock Creating a new clock with an initial time Construct two separate clocks, set times, test if they are equal clocks with negative hours and minutes that wrap","status":"passed","title":"clocks with negative hours and minutes that wrap"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496208,"runtime":335,"slow":false,"start":1702808495873},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\matchers\\MyClassToUseTruthiness.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassToUseTruthiness"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseTruthiness should create an instance of MyClassToUseTruthiness","status":"passed","title":"should create an instance of MyClassToUseTruthiness"},{"ancestorTitles":["MyClassToUseTruthiness"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseTruthiness should return the correct value","status":"passed","title":"should return the correct value"},{"ancestorTitles":["MyClassToUseTruthiness"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseTruthiness should correctly check if the value is positive using toBeTruthy/toBeFalsy","status":"passed","title":"should correctly check if the value is positive using toBeTruthy/toBeFalsy"},{"ancestorTitles":["MyClassToUseTruthiness"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseTruthiness should check if a value is null and defined","status":"passed","title":"should check if a value is null and defined"},{"ancestorTitles":["MyClassToUseTruthiness"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseTruthiness should check if a value is defined","status":"passed","title":"should check if a value is defined"},{"ancestorTitles":["MyClassToUseTruthiness"],"duration":2,"failureMessages":[],"fullName":"MyClassToUseTruthiness should check if a value is undefined using toBeUndefined","status":"passed","title":"should check if a value is undefined using toBeUndefined"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496217,"runtime":409,"slow":false,"start":1702808495808},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\async\\MyClassAsyncAwait.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassAsyncAwait"],"duration":1,"failureMessages":[],"fullName":"MyClassAsyncAwait should create an instance of MyClassAsyncAwait","status":"passed","title":"should create an instance of MyClassAsyncAwait"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":1,"failureMessages":[],"fullName":"MyClassAsyncAwait should return the correct value asynchronously","status":"passed","title":"should return the correct value asynchronously"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":15,"failureMessages":[],"fullName":"MyClassAsyncAwait should multiply the value asynchronously","status":"passed","title":"should multiply the value asynchronously"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":28,"failureMessages":[],"fullName":"MyClassAsyncAwait should chain promises correctly","status":"passed","title":"should chain promises correctly"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":32,"failureMessages":[],"fullName":"MyClassAsyncAwait should handle multiple promises","status":"passed","title":"should handle multiple promises"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":17,"failureMessages":[],"fullName":"MyClassAsyncAwait should reject the promise with proper error message","status":"passed","title":"should reject the promise with proper error message"},{"ancestorTitles":["MyClassAsyncAwait"],"duration":14,"failureMessages":[],"fullName":"MyClassAsyncAwait should handle pending promises with async/await","status":"passed","title":"should handle pending promises with async/await"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496299,"runtime":429,"slow":false,"start":1702808495870},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\mock\\MyClassMockFunctions2ndPart.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassGetMockName"],"duration":2,"failureMessages":[],"fullName":"MyClassGetMockName should create an instance of MyClassGetMockName","status":"passed","title":"should create an instance of MyClassGetMockName"},{"ancestorTitles":["MyClassGetMockName"],"duration":3,"failureMessages":[],"fullName":"MyClassGetMockName should mock the getValue method using mockReturnValue","status":"passed","title":"should mock the getValue method using mockReturnValue"},{"ancestorTitles":["MyClassGetMockName"],"duration":0,"failureMessages":[],"fullName":"MyClassGetMockName should mock the multiplyBy method using mockImplementation","status":"passed","title":"should mock the multiplyBy method using mockImplementation"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should mock the multiplyBy method using mockImplementationOnce","status":"passed","title":"should mock the multiplyBy method using mockImplementationOnce"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should mock the getValue method using mockReturnThis","status":"passed","title":"should mock the getValue method using mockReturnThis"},{"ancestorTitles":["MyClassGetMockName"],"duration":14,"failureMessages":[],"fullName":"MyClassGetMockName should mock the getValue method using mockName","status":"passed","title":"should mock the getValue method using mockName"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should check if multiplyBy method has been called","status":"passed","title":"should check if multiplyBy method has been called"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should check if multiplyBy method has been called with specific arguments","status":"passed","title":"should check if multiplyBy method has been called with specific arguments"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should check if multiplyBy method has been last called with specific arguments","status":"passed","title":"should check if multiplyBy method has been last called with specific arguments"},{"ancestorTitles":["MyClassGetMockName"],"duration":4,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for getValue method","status":"passed","title":"should match snapshot for getValue method"},{"ancestorTitles":["MyClassGetMockName"],"duration":3,"failureMessages":[],"fullName":"MyClassGetMockName should check the number of calls to multiplyBy method","status":"passed","title":"should check the number of calls to multiplyBy method"},{"ancestorTitles":["MyClassGetMockName"],"duration":16,"failureMessages":[],"fullName":"MyClassGetMockName should check the calls array for multiplyBy method","status":"passed","title":"should check the calls array for multiplyBy method"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496397,"runtime":360,"slow":false,"start":1702808496037},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\exercism\\Clock.GPT.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Clock"],"duration":2,"failureMessages":[],"fullName":"Clock constructor sets hour and minute","status":"passed","title":"constructor sets hour and minute"},{"ancestorTitles":["Clock"],"duration":0,"failureMessages":[],"fullName":"Clock constructor sets hour only","status":"passed","title":"constructor sets hour only"},{"ancestorTitles":["Clock"],"duration":1,"failureMessages":[],"fullName":"Clock toString pads single-digit hour and minute","status":"passed","title":"toString pads single-digit hour and minute"},{"ancestorTitles":["Clock"],"duration":0,"failureMessages":[],"fullName":"Clock plus adds minutes to the time","status":"passed","title":"plus adds minutes to the time"},{"ancestorTitles":["Clock"],"duration":0,"failureMessages":[],"fullName":"Clock minus subtracts minutes from the time","status":"passed","title":"minus subtracts minutes from the time"},{"ancestorTitles":["Clock"],"duration":1,"failureMessages":[],"fullName":"Clock plus handles overflow into the next hour","status":"passed","title":"plus handles overflow into the next hour"},{"ancestorTitles":["Clock"],"duration":0,"failureMessages":[],"fullName":"Clock minus handles underflow into the previous hour","status":"passed","title":"minus handles underflow into the previous hour"},{"ancestorTitles":["Clock"],"duration":1,"failureMessages":[],"fullName":"Clock equals compares two clocks","status":"passed","title":"equals compares two clocks"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496417,"runtime":395,"slow":false,"start":1702808496022},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\unit\\component\\integration\\user.GoogleAI.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User unit tests generated by Google AI"],"duration":2,"failureMessages":[],"fullName":"User unit tests generated by Google AI getTotalMoney should calculate the total money of the user and their children","status":"passed","title":"getTotalMoney should calculate the total money of the user and their children"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI isEligibleForDiscount should return true when the user status is VIP or Admin","status":"passed","title":"isEligibleForDiscount should return true when the user status is VIP or Admin"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":2,"failureMessages":[],"fullName":"User unit tests generated by Google AI isEligibleForDiscount should return false when the user status is not VIP or Admin","status":"passed","title":"isEligibleForDiscount should return false when the user status is not VIP or Admin"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI incrementAgeUntil should increase the age of the user until it reaches the target age","status":"passed","title":"incrementAgeUntil should increase the age of the user until it reaches the target age"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":2,"failureMessages":[],"fullName":"User unit tests generated by Google AI categorizeUserByAge should return correct category based on user age","status":"passed","title":"categorizeUserByAge should return correct category based on user age"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":5,"failureMessages":[],"fullName":"User unit tests generated by Google AI isTeenager should return true when the user age is between 13 and 19 (inclusive)","status":"passed","title":"isTeenager should return true when the user age is between 13 and 19 (inclusive)"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI isSeniorCitizen should return true when the user age is 65 or above","status":"passed","title":"isSeniorCitizen should return true when the user age is 65 or above"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI calculateRetirementAge should return the retirement age","status":"passed","title":"calculateRetirementAge should return the retirement age"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI calculateYearsToRetired should return the correct number of years until retirement","status":"passed","title":"calculateYearsToRetired should return the correct number of years until retirement"},{"ancestorTitles":["User unit tests generated by Google AI"],"duration":1,"failureMessages":[],"fullName":"User unit tests generated by Google AI proposeNewStatus should return the correct status based on user money","status":"passed","title":"proposeNewStatus should return the correct status based on user money"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496459,"runtime":653,"slow":false,"start":1702808495806},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\async\\MyClassCallback.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassCallback"],"duration":1,"failureMessages":[],"fullName":"MyClassCallback should create an instance of MyClassCallback","status":"passed","title":"should create an instance of MyClassCallback"},{"ancestorTitles":["MyClassCallback"],"duration":0,"failureMessages":[],"fullName":"MyClassCallback should return the correct value asynchronously with callback","status":"passed","title":"should return the correct value asynchronously with callback"},{"ancestorTitles":["MyClassCallback"],"duration":64,"failureMessages":[],"fullName":"MyClassCallback should multiply the value asynchronously with callback","status":"passed","title":"should multiply the value asynchronously with callback"},{"ancestorTitles":["MyClassCallback"],"duration":83,"failureMessages":[],"fullName":"MyClassCallback should chain callbacks correctly","status":"passed","title":"should chain callbacks correctly"},{"ancestorTitles":["MyClassCallback"],"duration":30,"failureMessages":[],"fullName":"MyClassCallback should handle multiple callbacks","status":"passed","title":"should handle multiple callbacks"},{"ancestorTitles":["MyClassCallback"],"duration":38,"failureMessages":[],"fullName":"MyClassCallback should handle multiple callbacks using nested callbacks","status":"passed","title":"should handle multiple callbacks using nested callbacks"},{"ancestorTitles":["MyClassCallback"],"duration":31,"failureMessages":[],"fullName":"MyClassCallback should handle errors with proper callback","status":"passed","title":"should handle errors with proper callback"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496663,"runtime":332,"slow":false,"start":1702808496331},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\mock\\MyClassMockFunctions3rdPart.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassGetMockName"],"duration":22,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for multiplyBy method with specific argument","status":"passed","title":"should match snapshot for multiplyBy method with specific argument"},{"ancestorTitles":["MyClassGetMockName"],"duration":2,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for multiplyBy method with different argument","status":"passed","title":"should match snapshot for multiplyBy method with different argument"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for getValue method","status":"passed","title":"should match snapshot for getValue method"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for multiplyBy method with mockImplementation","status":"passed","title":"should match snapshot for multiplyBy method with mockImplementation"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should match snapshot for multiplyBy method with mockReturnValue","status":"passed","title":"should match snapshot for multiplyBy method with mockReturnValue"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496679,"runtime":356,"slow":false,"start":1702808496323},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\matchers\\MyClassToUseArraysAndIterablesMatchers.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassToUseArraysAndIterablesMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseArraysAndIterablesMatchers should create an instance of MyClassToUseArraysAndIterablesMatchers","status":"passed","title":"should create an instance of MyClassToUseArraysAndIterablesMatchers"},{"ancestorTitles":["MyClassToUseArraysAndIterablesMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseArraysAndIterablesMatchers should return the correct values","status":"passed","title":"should return the correct values"},{"ancestorTitles":["MyClassToUseArraysAndIterablesMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseArraysAndIterablesMatchers should check if a value is present in the array or iterable","status":"passed","title":"should check if a value is present in the array or iterable"},{"ancestorTitles":["MyClassToUseArraysAndIterablesMatchers"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseArraysAndIterablesMatchers should check if a value is not present in the array or iterable","status":"passed","title":"should check if a value is not present in the array or iterable"},{"ancestorTitles":["MyClassToUseArraysAndIterablesMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseArraysAndIterablesMatchers should check if a value is present in the array or iterable using toBeTruthy/toBeFalsy","status":"passed","title":"should check if a value is present in the array or iterable using toBeTruthy/toBeFalsy"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496729,"runtime":311,"slow":false,"start":1702808496418},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\mock\\MyClassMockFunctions1stPart.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassGetMockName"],"duration":4,"failureMessages":[],"fullName":"MyClassGetMockName should create an instance of MyClassGetMockName","status":"passed","title":"should create an instance of MyClassGetMockName"},{"ancestorTitles":["MyClassGetMockName"],"duration":2,"failureMessages":[],"fullName":"MyClassGetMockName should mock the getValue method","status":"passed","title":"should mock the getValue method"},{"ancestorTitles":["MyClassGetMockName"],"duration":22,"failureMessages":[],"fullName":"MyClassGetMockName should mock the multiplyBy method","status":"passed","title":"should mock the multiplyBy method"},{"ancestorTitles":["MyClassGetMockName"],"duration":2,"failureMessages":[],"fullName":"MyClassGetMockName should handle multiple calls to multiplyBy with different factors","status":"passed","title":"should handle multiple calls to multiplyBy with different factors"},{"ancestorTitles":["MyClassGetMockName"],"duration":1,"failureMessages":[],"fullName":"MyClassGetMockName should restore original implementation after mocking","status":"passed","title":"should restore original implementation after mocking"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496786,"runtime":296,"slow":false,"start":1702808496490},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\matchers\\MyClassToUseNumberMatchers.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":3,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should create an instance of MyClassToUseNumberMatchers","status":"passed","title":"should create an instance of MyClassToUseNumberMatchers"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should return the correct value","status":"passed","title":"should return the correct value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should add numbers correctly","status":"passed","title":"should add numbers correctly"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is equal to a specific value","status":"passed","title":"should check if a value is equal to a specific value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is greater than a specific value","status":"passed","title":"should check if a value is greater than a specific value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is greater than or equal to a specific value","status":"passed","title":"should check if a value is greater than or equal to a specific value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is less than a specific value","status":"passed","title":"should check if a value is less than a specific value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":0,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is less than or equal to a specific value","status":"passed","title":"should check if a value is less than or equal to a specific value"},{"ancestorTitles":["MyClassToUseNumberMatchers"],"duration":2,"failureMessages":[],"fullName":"MyClassToUseNumberMatchers should check if a value is close to a specific value with a precision","status":"passed","title":"should check if a value is close to a specific value with a precision"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496804,"runtime":320,"slow":false,"start":1702808496484},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\matchers\\MyClassToUseThrowMatchers.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassToUseThrowMatchers"],"duration":2,"failureMessages":[],"fullName":"MyClassToUseThrowMatchers should create an instance of MyClassToUseThrowMatchers","status":"passed","title":"should create an instance of MyClassToUseThrowMatchers"},{"ancestorTitles":["MyClassToUseThrowMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseThrowMatchers should execute without throwing an error using not.toThrow","status":"passed","title":"should execute without throwing an error using not.toThrow"},{"ancestorTitles":["MyClassToUseThrowMatchers"],"duration":7,"failureMessages":[],"fullName":"MyClassToUseThrowMatchers should execute and throw an error using toThrow","status":"passed","title":"should execute and throw an error using toThrow"},{"ancestorTitles":["MyClassToUseThrowMatchers"],"duration":5,"failureMessages":[],"fullName":"MyClassToUseThrowMatchers should execute and throw a specific error using toThrow with error message","status":"passed","title":"should execute and throw a specific error using toThrow with error message"},{"ancestorTitles":["MyClassToUseThrowMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseThrowMatchers should execute and throw an error with specific instance using toThrow with error instance","status":"passed","title":"should execute and throw an error with specific instance using toThrow with error instance"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808496847,"runtime":309,"slow":false,"start":1702808496538},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\matchers\\MyClassToUseStringMatchers.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MyClassToUseStringMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseStringMatchers should create an instance of MyClassToUseStringMatchers","status":"passed","title":"should create an instance of MyClassToUseStringMatchers"},{"ancestorTitles":["MyClassToUseStringMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseStringMatchers should return the correct value","status":"passed","title":"should return the correct value"},{"ancestorTitles":["MyClassToUseStringMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseStringMatchers should concatenate strings correctly","status":"passed","title":"should concatenate strings correctly"},{"ancestorTitles":["MyClassToUseStringMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseStringMatchers should check if a value matches a specific string or regex","status":"passed","title":"should check if a value matches a specific string or regex"},{"ancestorTitles":["MyClassToUseStringMatchers"],"duration":1,"failureMessages":[],"fullName":"MyClassToUseStringMatchers should check if a value does not match a specific string or regex","status":"passed","title":"should check if a value does not match a specific string or regex"}]},{"numFailingTests":0,"numPassingTests":67,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1702808498888,"runtime":11560,"slow":true,"start":1702808487328},"testFilePath":"D:\\Playground\\Jest-unit-tests\\tests\\unit\\component\\integration\\user.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User CRUD Operations integration tests"],"duration":84,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a new user","status":"passed","title":"should create a new user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":13,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get all users","status":"passed","title":"should get all users"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get a specific user by id","status":"passed","title":"should get a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update a specific user by id","status":"passed","title":"should update a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return only headers when using HEAD to retrieve a specific user by id","status":"passed","title":"should return only headers when using HEAD to retrieve a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":10,"failureMessages":[],"fullName":"User CRUD Operations integration tests should retrieve a list of users","status":"passed","title":"should retrieve a list of users"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should describe communication options for /users endpoint using OPTIONS method","status":"passed","title":"should describe communication options for /users endpoint using OPTIONS method"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should describe communication options for /users/:id endpoint using OPTIONS method","status":"passed","title":"should describe communication options for /users/:id endpoint using OPTIONS method"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should add a child to a specific user by id","status":"passed","title":"should add a child to a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should retrieve all children of a specific user by id","status":"passed","title":"should retrieve all children of a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should retrieve a specific child by id for a specific user by id","status":"passed","title":"should retrieve a specific child by id for a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update a specific child by id for a specific user by id","status":"passed","title":"should update a specific child by id for a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":10,"failureMessages":[],"fullName":"User CRUD Operations integration tests should delete a specific child by id for a specific user by id","status":"passed","title":"should delete a specific child by id for a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":33,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a user, add children, and perform nested operations","status":"passed","title":"should create a user, add children, and perform nested operations"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":18,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create and delete a specific user by id","status":"passed","title":"should create and delete a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should handle deleting a non-existing user","status":"passed","title":"should handle deleting a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":10,"failureMessages":[],"fullName":"User CRUD Operations integration tests should handle deleting a non-existing child for a specific user","status":"passed","title":"should handle deleting a non-existing child for a specific user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should handle deleting a non-existing user for deleting a child","status":"passed","title":"should handle deleting a non-existing user for deleting a child"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when updating a non-existing child for a user","status":"passed","title":"should return 404 status and error when updating a non-existing child for a user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when updating a child for a non-existing user","status":"passed","title":"should return 404 status and error when updating a child for a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when trying to retrieve children of a non-existing user","status":"passed","title":"should return 404 status and error when trying to retrieve children of a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":4,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when trying to retrieve a child for a non-existing user by id","status":"passed","title":"should return 404 status and error when trying to retrieve a child for a non-existing user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":12,"failureMessages":[],"fullName":"User CRUD Operations integration tests should recursively remove a user and their children from the users array","status":"passed","title":"should recursively remove a user and their children from the users array"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":13,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a child for a specific user and return 404 if the user is not found","status":"passed","title":"should create a child for a specific user and return 404 if the user is not found"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":11,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update user properties by id using PATCH method","status":"passed","title":"should update user properties by id using PATCH method"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a child for a specific user using POST method","status":"passed","title":"should create a child for a specific user using POST method"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":4,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when updating a non-existing user","status":"passed","title":"should return 404 status and error when updating a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when updating properties of a non-existing user","status":"passed","title":"should return 404 status and error when updating properties of a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when adding a child to a non-existing user","status":"passed","title":"should return 404 status and error when adding a child to a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":14,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a user and add a child to the user","status":"passed","title":"should create a user and add a child to the user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should create a new user and get the proposed status for that user","status":"passed","title":"should create a new user and get the proposed status for that user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when the user is not found","status":"passed","title":"should return 404 status and error when the user is not found"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with -100 money and return proposeNewStatus equal to \"outdated\"","status":"passed","title":"should cover all existing statuses with -100 money and return proposeNewStatus equal to \"outdated\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 100 money and return proposeNewStatus equal to \"outdated\"","status":"passed","title":"should cover all existing statuses with 100 money and return proposeNewStatus equal to \"outdated\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 999 money and return proposeNewStatus equal to \"outdated\"","status":"passed","title":"should cover all existing statuses with 999 money and return proposeNewStatus equal to \"outdated\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 1000 money and return proposeNewStatus equal to \"regular\"","status":"passed","title":"should cover all existing statuses with 1000 money and return proposeNewStatus equal to \"regular\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 3456 money and return proposeNewStatus equal to \"regular\"","status":"passed","title":"should cover all existing statuses with 3456 money and return proposeNewStatus equal to \"regular\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 4999 money and return proposeNewStatus equal to \"regular\"","status":"passed","title":"should cover all existing statuses with 4999 money and return proposeNewStatus equal to \"regular\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 5000 money and return proposeNewStatus equal to \"vip\"","status":"passed","title":"should cover all existing statuses with 5000 money and return proposeNewStatus equal to \"vip\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 6789 money and return proposeNewStatus equal to \"vip\"","status":"passed","title":"should cover all existing statuses with 6789 money and return proposeNewStatus equal to \"vip\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 9999 money and return proposeNewStatus equal to \"vip\"","status":"passed","title":"should cover all existing statuses with 9999 money and return proposeNewStatus equal to \"vip\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 10000 money and return proposeNewStatus equal to \"admin\"","status":"passed","title":"should cover all existing statuses with 10000 money and return proposeNewStatus equal to \"admin\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 98745 money and return proposeNewStatus equal to \"admin\"","status":"passed","title":"should cover all existing statuses with 98745 money and return proposeNewStatus equal to \"admin\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should cover all existing statuses with 9874545445 money and return proposeNewStatus equal to \"admin\"","status":"passed","title":"should cover all existing statuses with 9874545445 money and return proposeNewStatus equal to \"admin\""},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":10,"failureMessages":[],"fullName":"User CRUD Operations integration tests should retrieve years to retirement for a specific user by id","status":"passed","title":"should retrieve years to retirement for a specific user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update age to 35 and retrieve updated years to retirement equal to 30","status":"passed","title":"should update age to 35 and retrieve updated years to retirement equal to 30"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":6,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update age to 49 and retrieve updated years to retirement equal to 16","status":"passed","title":"should update age to 49 and retrieve updated years to retirement equal to 16"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update age to 64 and retrieve updated years to retirement equal to 1","status":"passed","title":"should update age to 64 and retrieve updated years to retirement equal to 1"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":6,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update age to 65 and retrieve updated years to retirement equal to 0","status":"passed","title":"should update age to 65 and retrieve updated years to retirement equal to 0"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should update age to 75 and retrieve updated years to retirement equal to 0","status":"passed","title":"should update age to 75 and retrieve updated years to retirement equal to 0"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":3,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when retrieving years to retirement for a non-existing user","status":"passed","title":"should return 404 status and error when retrieving years to retirement for a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 0 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 0 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 10 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 10 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 17 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 17 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":9,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 18 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 18 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 19 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 19 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 59 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 59 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":8,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 60 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 60 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":7,"failureMessages":[],"fullName":"User CRUD Operations integration tests should get the user category for a specific user with age 92 and expected category NaN by id","status":"passed","title":"should get the user category for a specific user with age 92 and expected category NaN by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":4,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 when getting user category for a non-existing user","status":"passed","title":"should return 404 when getting user category for a non-existing user"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":5,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 status and error when incrementing age for a non-existing user by id","status":"passed","title":"should return 404 status and error when incrementing age for a non-existing user by id"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":11,"failureMessages":[],"fullName":"User CRUD Operations integration tests should increment age until target age","status":"passed","title":"should increment age until target age"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":11,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than the current age\", \"initialAge\": 30, \"targetAge\": 30})","status":"passed","title":"should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than the current age\", \"initialAge\": 30, \"targetAge\": 30})"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":11,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than the current age\", \"initialAge\": 30, \"targetAge\": 25})","status":"passed","title":"should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than the current age\", \"initialAge\": 30, \"targetAge\": 25})"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":12,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than 0\", \"initialAge\": 30, \"targetAge\": 0})","status":"passed","title":"should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than 0\", \"initialAge\": 30, \"targetAge\": 0})"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":11,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than 0\", \"initialAge\": 30, \"targetAge\": -13})","status":"passed","title":"should return 400 for invalid target age ({\"errorMessage\": \"Target age must be greater than 0\", \"initialAge\": 30, \"targetAge\": -13})"},{"ancestorTitles":["User CRUD Operations integration tests"],"duration":4,"failureMessages":[],"fullName":"User CRUD Operations integration tests should return 404 for non-existing user","status":"passed","title":"should return 404 for non-existing user"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"D:\\Playground\\Jest-unit-tests\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\Playground\\Jest-unit-tests\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./html-report","filename":"report.html","openReport":true}]],"rootDir":"D:\\Playground\\Jest-unit-tests","runTestsByPath":false,"seed":617713139,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"D:\\Playground\\Jest-unit-tests\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1702808499022,"_reporterOptions":{"publicPath":"./html-report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})